/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Fri Apr 26 22:43:04 2019. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _ResponseCode {
    ResponseCode_UKNOWN = 0,
    ResponseCode_OK = 1
} ResponseCode;
#define _ResponseCode_MIN ResponseCode_UKNOWN
#define _ResponseCode_MAX ResponseCode_OK
#define _ResponseCode_ARRAYSIZE ((ResponseCode)(ResponseCode_OK+1))

/* Struct definitions */
typedef struct _Configuration {
    bool has_millis_duration_per_degree_second;
    uint32_t millis_duration_per_degree_second;
    bool has_power_low_mode;
    uint32_t power_low_mode;
    bool has_power_medium_mode;
    uint32_t power_medium_mode;
    bool has_knots_to_lock_course;
    float knots_to_lock_course;
/* @@protoc_insertion_point(struct:Configuration) */
} Configuration;

typedef struct _Location {
    float lat;
    float lng;
/* @@protoc_insertion_point(struct:Location) */
} Location;

typedef struct _NavRequest {
    bool has_location;
    Location location;
/* @@protoc_insertion_point(struct:NavRequest) */
} NavRequest;

typedef struct _SeaResponse {
    ResponseCode response_code;
    bool has_current_location;
    Location current_location;
    Location current_destination;
/* @@protoc_insertion_point(struct:SeaResponse) */
} SeaResponse;

typedef struct _SeaRequest {
    bool has_nav_request;
    NavRequest nav_request;
    bool has_update_configuration;
    Configuration update_configuration;
/* @@protoc_insertion_point(struct:SeaRequest) */
} SeaRequest;

/* Default values for struct fields */
extern const uint32_t Configuration_millis_duration_per_degree_second_default;
extern const uint32_t Configuration_power_low_mode_default;
extern const uint32_t Configuration_power_medium_mode_default;
extern const float Configuration_knots_to_lock_course_default;

/* Initializer values for message structs */
#define SeaRequest_init_default                  {false, NavRequest_init_default, false, Configuration_init_default}
#define SeaResponse_init_default                 {_ResponseCode_MIN, false, Location_init_default, Location_init_default}
#define NavRequest_init_default                  {false, Location_init_default}
#define Location_init_default                    {0, 0}
#define Configuration_init_default               {false, 30u, false, 100u, false, 200u, false, 1}
#define SeaRequest_init_zero                     {false, NavRequest_init_zero, false, Configuration_init_zero}
#define SeaResponse_init_zero                    {_ResponseCode_MIN, false, Location_init_zero, Location_init_zero}
#define NavRequest_init_zero                     {false, Location_init_zero}
#define Location_init_zero                       {0, 0}
#define Configuration_init_zero                  {false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Configuration_millis_duration_per_degree_second_tag 1
#define Configuration_power_low_mode_tag         2
#define Configuration_power_medium_mode_tag      3
#define Configuration_knots_to_lock_course_tag   4
#define Location_lat_tag                         1
#define Location_lng_tag                         2
#define NavRequest_location_tag                  1
#define SeaResponse_response_code_tag            1
#define SeaResponse_current_location_tag         2
#define SeaResponse_current_destination_tag      3
#define SeaRequest_nav_request_tag               1
#define SeaRequest_update_configuration_tag      2

/* Struct field encoding specification for nanopb */
extern const pb_field_t SeaRequest_fields[3];
extern const pb_field_t SeaResponse_fields[4];
extern const pb_field_t NavRequest_fields[2];
extern const pb_field_t Location_fields[3];
extern const pb_field_t Configuration_fields[5];

/* Maximum encoded size of messages (where known) */
#define SeaRequest_size                          39
#define SeaResponse_size                         26
#define NavRequest_size                          12
#define Location_size                            10
#define Configuration_size                       23

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
